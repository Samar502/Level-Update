{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Mathematical Model Level Update","provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"3XEFY9fS7ZPX","executionInfo":{"status":"ok","timestamp":1626562957103,"user_tz":-330,"elapsed":912,"user":{"displayName":"samar singh","photoUrl":"","userId":"11950474101131546920"}}},"source":["import pandas as pd\n","import numpy as np\n","import random\n","import matplotlib.pyplot as plt"],"execution_count":151,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"7soE2Vs4V0rf"},"source":["Creating a normal distribution for questions from level 1 to 5"]},{"cell_type":"code","metadata":{"id":"g1M9DG487e4C","executionInfo":{"status":"ok","timestamp":1626562957112,"user_tz":-330,"elapsed":56,"user":{"displayName":"samar singh","photoUrl":"","userId":"11950474101131546920"}}},"source":["input_dict = {'Ques Level List' : [], 'Correctness': [], 'Average Time' : [], 'Time Taken':[]}\n","examples = 100\n","for t in range(examples):\n","    k = random.randint(1,4)\n","    if k==1:\n","        n=random.randint(1,2)\n","        if n==2:\n","            n=5\n","    else:\n","        n=k    \n","    input_dict['Ques Level List'].append(n)"],"execution_count":152,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8rdWJ0PZ7jXi","executionInfo":{"status":"ok","timestamp":1626562957115,"user_tz":-330,"elapsed":58,"user":{"displayName":"samar singh","photoUrl":"","userId":"11950474101131546920"}},"outputId":"00c28275-bab2-4b10-ee24-0fa4702650f1"},"source":["print(input_dict['Ques Level List'].count(1),\n","     input_dict['Ques Level List'].count(2),\n","     input_dict['Ques Level List'].count(3),\n","     input_dict['Ques Level List'].count(4),\n","     input_dict['Ques Level List'].count(5))"],"execution_count":153,"outputs":[{"output_type":"stream","text":["13 22 25 26 14\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"aaHcE8j4V-f9"},"source":["Distribution of questions based on Correct/Incorrect/Skipped"]},{"cell_type":"code","metadata":{"id":"047BIohE7pOC","executionInfo":{"status":"ok","timestamp":1626562957118,"user_tz":-330,"elapsed":56,"user":{"displayName":"samar singh","photoUrl":"","userId":"11950474101131546920"}}},"source":["input_dict['Correctness'] = []\n","for t in range(examples):\n","    z=random.random()\n","    if (z>0.9):\n","      z=0\n","    elif (z<0.3):\n","      z=-1\n","    else:\n","      z=1\n","    input_dict['Correctness'].append(z)"],"execution_count":154,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YC08q1WM7pWx","executionInfo":{"status":"ok","timestamp":1626562957119,"user_tz":-330,"elapsed":55,"user":{"displayName":"samar singh","photoUrl":"","userId":"11950474101131546920"}},"outputId":"b16f0260-32f1-4828-8d35-ac1c69668ae3"},"source":["print(\" Skipped :\",input_dict['Correctness'].count(0),\"\\n\",\n","     \"Incorrect :\" ,input_dict['Correctness'].count(-1),\"\\n\",\n","     \"Correct :\" ,input_dict['Correctness'].count(1),\"\\n\")"],"execution_count":155,"outputs":[{"output_type":"stream","text":[" Skipped : 8 \n"," Incorrect : 36 \n"," Correct : 56 \n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6byIYLkdRYpB","executionInfo":{"status":"ok","timestamp":1626562957121,"user_tz":-330,"elapsed":52,"user":{"displayName":"samar singh","photoUrl":"","userId":"11950474101131546920"}},"outputId":"57fa9004-11f3-4ec6-9b98-67ad7313120f"},"source":["total=input_dict['Correctness'].count(-1)+input_dict['Correctness'].count(0)+input_dict['Correctness'].count(1)\n","correct=input_dict['Correctness'].count(1)\n","incorrect=input_dict['Correctness'].count(-1)\n","skipped=input_dict['Correctness'].count(0)\n","print(\"Percentage Correct :\",correct*100/total,\"%\\n\",\n","      \"Percentage Incorrect :\",incorrect*100/total,\"%\\n\",\n","      \"Percentage Skipped :\",skipped*100/total,\"%\\n\")"],"execution_count":156,"outputs":[{"output_type":"stream","text":["Percentage Correct : 56.0 %\n"," Percentage Incorrect : 36.0 %\n"," Percentage Skipped : 8.0 %\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"8o1lnPEXWp8H"},"source":["Allotting different average times for different users answering various difficulty level of questions"]},{"cell_type":"code","metadata":{"id":"ZQEW5wvD7paa","executionInfo":{"status":"ok","timestamp":1626562957123,"user_tz":-330,"elapsed":44,"user":{"displayName":"samar singh","photoUrl":"","userId":"11950474101131546920"}}},"source":["input_dict['Average Time'] = []\n","for i in input_dict['Ques Level List']:\n","    if i ==1:\n","        input_dict['Average Time'].append(random.randint(5,10))\n","    elif i==2:\n","        input_dict['Average Time'].append(random.randint(12,18))\n","    elif i==3:\n","        input_dict['Average Time'].append(random.randint(22,31))\n","    elif i==4:\n","        input_dict['Average Time'].append(random.randint(33,40))\n","    elif i==5:\n","        input_dict['Average Time'].append(random.randint(44,50))"],"execution_count":157,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"qRWvwgeOXHKm"},"source":["Considering the time taken by user to be between (average time +- average time/2)"]},{"cell_type":"code","metadata":{"id":"gSEmxCq67xDx","executionInfo":{"status":"ok","timestamp":1626562957124,"user_tz":-330,"elapsed":44,"user":{"displayName":"samar singh","photoUrl":"","userId":"11950474101131546920"}}},"source":["input_dict['Time Taken'] = []\n","for i in input_dict['Average Time']:\n","    start=int(i-i/2)\n","    end=int(i+i/2)\n","    input_dict['Time Taken'].append(random.randrange(start,end))"],"execution_count":158,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"l_fcYtdu7xGh","executionInfo":{"status":"ok","timestamp":1626562957126,"user_tz":-330,"elapsed":44,"user":{"displayName":"samar singh","photoUrl":"","userId":"11950474101131546920"}},"outputId":"4815c5d2-4f4d-4929-8282-a34cd321cf55"},"source":["input_dict['Ques Level List']\n","input_df = pd.DataFrame(input_dict)\n","input_df.head(50)"],"execution_count":159,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Ques Level List</th>\n","      <th>Correctness</th>\n","      <th>Average Time</th>\n","      <th>Time Taken</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>46</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>45</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>-1</td>\n","      <td>31</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>-1</td>\n","      <td>49</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>-1</td>\n","      <td>46</td>\n","      <td>65</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>15</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>4</td>\n","      <td>-1</td>\n","      <td>35</td>\n","      <td>49</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>3</td>\n","      <td>-1</td>\n","      <td>24</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>4</td>\n","      <td>-1</td>\n","      <td>33</td>\n","      <td>38</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>3</td>\n","      <td>-1</td>\n","      <td>26</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>17</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>1</td>\n","      <td>-1</td>\n","      <td>10</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>33</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>49</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>13</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>18</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>4</td>\n","      <td>-1</td>\n","      <td>33</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>39</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>18</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>4</td>\n","      <td>-1</td>\n","      <td>33</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>40</td>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>40</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>4</td>\n","      <td>-1</td>\n","      <td>34</td>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>4</td>\n","      <td>-1</td>\n","      <td>35</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>34</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>36</td>\n","      <td>34</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>31</td>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>37</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>26</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>24</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>18</td>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>14</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>17</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>13</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>35</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>17</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>35</td>\n","      <td>48</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>34</td>\n","      <td>42</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>47</td>\n","      <td>49</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>5</td>\n","      <td>-1</td>\n","      <td>47</td>\n","      <td>65</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>40</td>\n","      <td>43</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>26</td>\n","      <td>21</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Ques Level List  Correctness  Average Time  Time Taken\n","0                 5            0            46          50\n","1                 5            1            45          51\n","2                 1            1            10           5\n","3                 3           -1            31          29\n","4                 5           -1            49          61\n","5                 5           -1            46          65\n","6                 2            1            15          12\n","7                 4           -1            35          49\n","8                 1            1            10          11\n","9                 3           -1            24          33\n","10                4           -1            33          38\n","11                3           -1            26          20\n","12                2           -1            17          18\n","13                1           -1            10          13\n","14                5            0            50          31\n","15                4            1            33          25\n","16                5            0            49          25\n","17                2           -1            13          10\n","18                2           -1            18          14\n","19                4           -1            33          24\n","20                1            1             9          11\n","21                4            1            39          53\n","22                2            1            18          10\n","23                4           -1            33          25\n","24                2            1            12          15\n","25                4            1            40          44\n","26                4            1            40          30\n","27                4           -1            34          34\n","28                4           -1            35          18\n","29                4            1            34          31\n","30                4            1            36          34\n","31                3            1            31          45\n","32                4            0            37          29\n","33                3            1            26          36\n","34                3            1            24          13\n","35                2            0            13          16\n","36                2            1            18          12\n","37                2            1            14          10\n","38                2           -1            17          18\n","39                4            0            38          37\n","40                2            1            13           8\n","41                3            1            30          15\n","42                4            1            35          37\n","43                2            1            17          24\n","44                4            1            35          48\n","45                4            1            34          42\n","46                5            1            47          49\n","47                5           -1            47          65\n","48                4            1            40          43\n","49                3            0            26          21"]},"metadata":{"tags":[]},"execution_count":159}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bs6vwpFksaLC","executionInfo":{"status":"ok","timestamp":1626562957756,"user_tz":-330,"elapsed":670,"user":{"displayName":"samar singh","photoUrl":"","userId":"11950474101131546920"}},"outputId":"948c97f1-196a-401c-b077-92d51f552cb8"},"source":["responses=pd.DataFrame(columns=['Total Correct','Total Incorrect','Total Skipped'])\n","for i in range(1,6):\n","  Total_Correct=len(input_df[(input_df['Ques Level List']==i)&(input_df['Correctness']==1)])\n","  Total_Skipped=len(input_df[(input_df['Ques Level List']==i)&(input_df['Correctness']==0)])\n","  Total_Incorrect=len(input_df[(input_df['Ques Level List']==i)&(input_df['Correctness']==-1)])\n","  responses.loc[i]=[Total_Correct,Total_Incorrect,Total_Skipped]\n","  #print(\"For Questions of Level \",i,\": \",\" Total Correct:\",Total_Correct,\" Total Incorrect:\",Total_Incorrect,\" Total Skipped:\",Total_Skipped)\n","print(responses)"],"execution_count":160,"outputs":[{"output_type":"stream","text":["  Total Correct Total Incorrect Total Skipped\n","1             8               5             0\n","2            13               8             1\n","3            15               9             1\n","4            15               8             3\n","5             5               6             3\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Iz_UmlV4XVaC"},"source":["Update Function"]},{"cell_type":"code","metadata":{"id":"9GZ3xR697xLS","executionInfo":{"status":"ok","timestamp":1626562957763,"user_tz":-330,"elapsed":37,"user":{"displayName":"samar singh","photoUrl":"","userId":"11950474101131546920"}}},"source":["def update_level(current_level,ques_level, correctness, average_time, time_taken, aplha, beta, output_df, wrong_responses,correct_responses):\n","    \n","    level= current_level\n","\n","\n","    #if (int(current_level) == (init_level +1)):\n","     #   question_num =0\n","      #  init_level = int(current_level) \n","        #question_num+=1\n","        \n","    \n","    correct_marks =0\n","    time_marks = 0\n","    update=0\n","    \n","    \n","    if correctness==0:\n","        pass\n","\n","    else:\n","        \n","        #Correctness marks\n","        if correctness==1:\n","          val=ques_level\n","          modval=val\n","        else:\n","          val=ques_level-6\n","          modval=-val\n","        \n","        x1=(1+correctness)/2\n","        x2=(correctness-1)/2\n","        \n","        correct_marks= (x1*((5-current_level)/5) *alpha*(val*(np.sqrt(np.exp((val**2)/37)-1)/5)))-(x2*((current_level)/5)*alpha*(val*(np.sqrt(np.exp((val**2)/37)-1)/5)))\n","        if(correct_marks>0):\n","          correct_marks=correct_marks*(30-wrong_responses)/30\n","        else:\n","          correct_marks=correct_marks*(30-correct_responses)/30         \n","        # if correctness==-1:\n","        #    correct_marks=correct_marks/1.75\n","\n","        #Time marks\n","        \n","        time_marks = (x1*((5-current_level)/5)*beta *(np.exp(-time_taken/(average_time*modval))))+(x2*((current_level)/5)*beta*(np.exp(-average_time/time_taken*modval)))\n","        # if correctness==-1:\n","        #    time_marks=time_marks/1.75\n","\n","        update=correct_marks+ time_marks\n","        level+=update\n","\n","    if level < 1.0:\n","        level=1.0\n","    elif level >= 4.99:\n","        level=4.99\n","    \n","    #Updating Output Dictionary\n","    output_df['Ques Level'].append(ques_level)\n","    output_df['Correctness'].append(correctness)\n","    output_df['Average Time'].append(average_time)\n","    output_df['Time Taken'].append(time_taken)\n","    output_df['Correctness factor'].append(correct_marks)\n","    output_df['Time factor'].append(time_marks)\n","    output_df['Update'].append(update)\n","    output_df['Updated Level'].append(level)\n","        \n","        \n","    return output_df"],"execution_count":161,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iM3vtSWV8BVr","executionInfo":{"status":"ok","timestamp":1626562960945,"user_tz":-330,"elapsed":3217,"user":{"displayName":"samar singh","photoUrl":"","userId":"11950474101131546920"}},"outputId":"177deb13-679e-4c7a-8600-0315c93760eb"},"source":["init_level = float(input())\n","alpha=0.6\n","beta = 0.2\n","\n","output_dict = {'Current level':[init_level],'Ques Level' : [], 'Correctness': [], 'Average Time' : [], 'Time Taken':[] , \n","               'Correctness factor' : [] , 'Time factor' : [], 'Update' : [], 'Updated Level' : []}\n","for i in range(len(input_dict['Correctness'])):\n","    wrong_responses=0\n","    correct_responses=0\n","    if(i>=5):\n","      for j in range(i-5,i):\n","        if(correctness==-1):\n","          wrong_responses+=1\n","        elif(correctness==1):\n","          correct_responses+=1\n","    ques_level = input_dict['Ques Level List'][i]\n","    correctness = input_dict['Correctness'][i]\n","    average_time = input_dict['Average Time'][i]\n","    time_taken = input_dict['Time Taken'][i]\n","    \n","    output_dict = update_level(output_dict['Current level'][-1] , ques_level, correctness, average_time, time_taken, alpha, beta, output_dict,wrong_responses,correct_responses)\n","    \n","    if len(output_dict['Current level'])!=examples:\n","        output_dict['Current level'].append(output_dict['Updated Level'][-1])"],"execution_count":162,"outputs":[{"output_type":"stream","text":["2.5\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"rfyueaNT8ENw","executionInfo":{"status":"ok","timestamp":1626562960955,"user_tz":-330,"elapsed":66,"user":{"displayName":"samar singh","photoUrl":"","userId":"11950474101131546920"}},"outputId":"64e4f894-19af-4f1b-af3d-7f92d09592aa"},"source":["output_df = pd.DataFrame(output_dict)\n","output_df[0:50]"],"execution_count":163,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Current level</th>\n","      <th>Ques Level</th>\n","      <th>Correctness</th>\n","      <th>Average Time</th>\n","      <th>Time Taken</th>\n","      <th>Correctness factor</th>\n","      <th>Time factor</th>\n","      <th>Update</th>\n","      <th>Updated Level</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2.500000</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>46</td>\n","      <td>50</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2.500000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2.500000</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>45</td>\n","      <td>51</td>\n","      <td>0.294758</td>\n","      <td>0.079719</td>\n","      <td>0.374477</td>\n","      <td>2.874477</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2.874477</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>5</td>\n","      <td>0.008443</td>\n","      <td>0.051568</td>\n","      <td>0.060011</td>\n","      <td>2.934488</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2.934488</td>\n","      <td>3</td>\n","      <td>-1</td>\n","      <td>31</td>\n","      <td>29</td>\n","      <td>-0.110874</td>\n","      <td>-0.004752</td>\n","      <td>-0.115626</td>\n","      <td>2.818862</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.818862</td>\n","      <td>5</td>\n","      <td>-1</td>\n","      <td>49</td>\n","      <td>61</td>\n","      <td>-0.011198</td>\n","      <td>-0.050498</td>\n","      <td>-0.061696</td>\n","      <td>2.757167</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2.757167</td>\n","      <td>5</td>\n","      <td>-1</td>\n","      <td>46</td>\n","      <td>65</td>\n","      <td>-0.010953</td>\n","      <td>-0.054347</td>\n","      <td>-0.065300</td>\n","      <td>2.691867</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2.691867</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>15</td>\n","      <td>12</td>\n","      <td>0.031196</td>\n","      <td>0.061888</td>\n","      <td>0.093083</td>\n","      <td>2.784950</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2.784950</td>\n","      <td>4</td>\n","      <td>-1</td>\n","      <td>35</td>\n","      <td>49</td>\n","      <td>-0.037640</td>\n","      <td>-0.026697</td>\n","      <td>-0.064337</td>\n","      <td>2.720613</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2.720613</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>11</td>\n","      <td>0.007546</td>\n","      <td>0.030350</td>\n","      <td>0.037895</td>\n","      <td>2.758509</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2.758509</td>\n","      <td>3</td>\n","      <td>-1</td>\n","      <td>24</td>\n","      <td>33</td>\n","      <td>-0.086854</td>\n","      <td>-0.012450</td>\n","      <td>-0.099305</td>\n","      <td>2.659204</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2.659204</td>\n","      <td>4</td>\n","      <td>-1</td>\n","      <td>33</td>\n","      <td>38</td>\n","      <td>-0.043129</td>\n","      <td>-0.018729</td>\n","      <td>-0.061857</td>\n","      <td>2.597347</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>2.597347</td>\n","      <td>3</td>\n","      <td>-1</td>\n","      <td>26</td>\n","      <td>20</td>\n","      <td>-0.098136</td>\n","      <td>-0.002103</td>\n","      <td>-0.100239</td>\n","      <td>2.497108</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>2.497108</td>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>17</td>\n","      <td>18</td>\n","      <td>-0.176322</td>\n","      <td>-0.002285</td>\n","      <td>-0.178607</td>\n","      <td>2.318501</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>2.318501</td>\n","      <td>1</td>\n","      <td>-1</td>\n","      <td>10</td>\n","      <td>13</td>\n","      <td>-0.273359</td>\n","      <td>-0.001981</td>\n","      <td>-0.275340</td>\n","      <td>2.043161</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>2.043161</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>50</td>\n","      <td>31</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2.043161</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>2.043161</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>33</td>\n","      <td>25</td>\n","      <td>0.208784</td>\n","      <td>0.097867</td>\n","      <td>0.306651</td>\n","      <td>2.349812</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>2.349812</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>49</td>\n","      <td>25</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2.349812</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>2.349812</td>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>13</td>\n","      <td>10</td>\n","      <td>-0.165922</td>\n","      <td>-0.000519</td>\n","      <td>-0.166440</td>\n","      <td>2.183371</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>2.183371</td>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>18</td>\n","      <td>14</td>\n","      <td>-0.154169</td>\n","      <td>-0.000510</td>\n","      <td>-0.154679</td>\n","      <td>2.028692</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>2.028692</td>\n","      <td>4</td>\n","      <td>-1</td>\n","      <td>33</td>\n","      <td>24</td>\n","      <td>-0.032903</td>\n","      <td>-0.005188</td>\n","      <td>-0.038090</td>\n","      <td>1.990602</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>1.990602</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>11</td>\n","      <td>0.009962</td>\n","      <td>0.035460</td>\n","      <td>0.045422</td>\n","      <td>2.036024</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>2.036024</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>39</td>\n","      <td>53</td>\n","      <td>0.209288</td>\n","      <td>0.084408</td>\n","      <td>0.293697</td>\n","      <td>2.329720</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>2.329720</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>18</td>\n","      <td>10</td>\n","      <td>0.043308</td>\n","      <td>0.080906</td>\n","      <td>0.124214</td>\n","      <td>2.453934</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>2.453934</td>\n","      <td>4</td>\n","      <td>-1</td>\n","      <td>33</td>\n","      <td>25</td>\n","      <td>-0.033166</td>\n","      <td>-0.007005</td>\n","      <td>-0.040171</td>\n","      <td>2.413764</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>2.413764</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>15</td>\n","      <td>0.034954</td>\n","      <td>0.055373</td>\n","      <td>0.090327</td>\n","      <td>2.504090</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>2.504090</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>40</td>\n","      <td>44</td>\n","      <td>0.176238</td>\n","      <td>0.075833</td>\n","      <td>0.252071</td>\n","      <td>2.756161</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>2.756161</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>40</td>\n","      <td>30</td>\n","      <td>0.158439</td>\n","      <td>0.074408</td>\n","      <td>0.232847</td>\n","      <td>2.989009</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>2.989009</td>\n","      <td>4</td>\n","      <td>-1</td>\n","      <td>34</td>\n","      <td>34</td>\n","      <td>-0.040398</td>\n","      <td>-0.016181</td>\n","      <td>-0.056579</td>\n","      <td>2.932430</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>2.932430</td>\n","      <td>4</td>\n","      <td>-1</td>\n","      <td>35</td>\n","      <td>18</td>\n","      <td>-0.047560</td>\n","      <td>-0.002401</td>\n","      <td>-0.049961</td>\n","      <td>2.882469</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>2.882469</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>34</td>\n","      <td>31</td>\n","      <td>0.124600</td>\n","      <td>0.067437</td>\n","      <td>0.192037</td>\n","      <td>3.074506</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>3.074506</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>36</td>\n","      <td>34</td>\n","      <td>0.135960</td>\n","      <td>0.060822</td>\n","      <td>0.196782</td>\n","      <td>3.271288</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>3.271288</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>31</td>\n","      <td>45</td>\n","      <td>0.065316</td>\n","      <td>0.042623</td>\n","      <td>0.107939</td>\n","      <td>3.379227</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>3.379227</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>37</td>\n","      <td>29</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>3.379227</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>3.379227</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>26</td>\n","      <td>36</td>\n","      <td>0.061238</td>\n","      <td>0.040864</td>\n","      <td>0.102102</td>\n","      <td>3.481329</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>3.481329</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>24</td>\n","      <td>13</td>\n","      <td>0.057380</td>\n","      <td>0.050712</td>\n","      <td>0.108092</td>\n","      <td>3.589421</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>3.589421</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>16</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>3.589421</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>3.589421</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>18</td>\n","      <td>12</td>\n","      <td>0.022878</td>\n","      <td>0.040429</td>\n","      <td>0.063307</td>\n","      <td>3.652727</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>3.652727</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>14</td>\n","      <td>10</td>\n","      <td>0.021851</td>\n","      <td>0.037706</td>\n","      <td>0.059557</td>\n","      <td>3.712284</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>3.712284</td>\n","      <td>2</td>\n","      <td>-1</td>\n","      <td>17</td>\n","      <td>18</td>\n","      <td>-0.218439</td>\n","      <td>-0.003397</td>\n","      <td>-0.221836</td>\n","      <td>3.490449</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>3.490449</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>38</td>\n","      <td>37</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>3.490449</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>3.490449</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>13</td>\n","      <td>8</td>\n","      <td>0.024483</td>\n","      <td>0.044389</td>\n","      <td>0.068872</td>\n","      <td>3.559321</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>3.559321</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>30</td>\n","      <td>15</td>\n","      <td>0.054433</td>\n","      <td>0.048780</td>\n","      <td>0.103214</td>\n","      <td>3.662534</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>3.662534</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>35</td>\n","      <td>37</td>\n","      <td>0.094439</td>\n","      <td>0.041074</td>\n","      <td>0.135513</td>\n","      <td>3.798048</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>3.798048</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>17</td>\n","      <td>24</td>\n","      <td>0.019494</td>\n","      <td>0.023735</td>\n","      <td>0.043229</td>\n","      <td>3.841276</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>3.841276</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>35</td>\n","      <td>48</td>\n","      <td>0.081818</td>\n","      <td>0.032896</td>\n","      <td>0.114714</td>\n","      <td>3.955990</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>3.955990</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>34</td>\n","      <td>42</td>\n","      <td>0.073718</td>\n","      <td>0.030665</td>\n","      <td>0.104383</td>\n","      <td>4.060374</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>4.060374</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>47</td>\n","      <td>49</td>\n","      <td>0.110785</td>\n","      <td>0.030511</td>\n","      <td>0.141296</td>\n","      <td>4.201670</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>4.201670</td>\n","      <td>5</td>\n","      <td>-1</td>\n","      <td>47</td>\n","      <td>65</td>\n","      <td>-0.013909</td>\n","      <td>-0.081556</td>\n","      <td>-0.095464</td>\n","      <td>4.106206</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>4.106206</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>40</td>\n","      <td>43</td>\n","      <td>0.052593</td>\n","      <td>0.027326</td>\n","      <td>0.079919</td>\n","      <td>4.186125</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>4.186125</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>26</td>\n","      <td>21</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>4.186125</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Current level  Ques Level  ...    Update  Updated Level\n","0        2.500000           5  ...  0.000000       2.500000\n","1        2.500000           5  ...  0.374477       2.874477\n","2        2.874477           1  ...  0.060011       2.934488\n","3        2.934488           3  ... -0.115626       2.818862\n","4        2.818862           5  ... -0.061696       2.757167\n","5        2.757167           5  ... -0.065300       2.691867\n","6        2.691867           2  ...  0.093083       2.784950\n","7        2.784950           4  ... -0.064337       2.720613\n","8        2.720613           1  ...  0.037895       2.758509\n","9        2.758509           3  ... -0.099305       2.659204\n","10       2.659204           4  ... -0.061857       2.597347\n","11       2.597347           3  ... -0.100239       2.497108\n","12       2.497108           2  ... -0.178607       2.318501\n","13       2.318501           1  ... -0.275340       2.043161\n","14       2.043161           5  ...  0.000000       2.043161\n","15       2.043161           4  ...  0.306651       2.349812\n","16       2.349812           5  ...  0.000000       2.349812\n","17       2.349812           2  ... -0.166440       2.183371\n","18       2.183371           2  ... -0.154679       2.028692\n","19       2.028692           4  ... -0.038090       1.990602\n","20       1.990602           1  ...  0.045422       2.036024\n","21       2.036024           4  ...  0.293697       2.329720\n","22       2.329720           2  ...  0.124214       2.453934\n","23       2.453934           4  ... -0.040171       2.413764\n","24       2.413764           2  ...  0.090327       2.504090\n","25       2.504090           4  ...  0.252071       2.756161\n","26       2.756161           4  ...  0.232847       2.989009\n","27       2.989009           4  ... -0.056579       2.932430\n","28       2.932430           4  ... -0.049961       2.882469\n","29       2.882469           4  ...  0.192037       3.074506\n","30       3.074506           4  ...  0.196782       3.271288\n","31       3.271288           3  ...  0.107939       3.379227\n","32       3.379227           4  ...  0.000000       3.379227\n","33       3.379227           3  ...  0.102102       3.481329\n","34       3.481329           3  ...  0.108092       3.589421\n","35       3.589421           2  ...  0.000000       3.589421\n","36       3.589421           2  ...  0.063307       3.652727\n","37       3.652727           2  ...  0.059557       3.712284\n","38       3.712284           2  ... -0.221836       3.490449\n","39       3.490449           4  ...  0.000000       3.490449\n","40       3.490449           2  ...  0.068872       3.559321\n","41       3.559321           3  ...  0.103214       3.662534\n","42       3.662534           4  ...  0.135513       3.798048\n","43       3.798048           2  ...  0.043229       3.841276\n","44       3.841276           4  ...  0.114714       3.955990\n","45       3.955990           4  ...  0.104383       4.060374\n","46       4.060374           5  ...  0.141296       4.201670\n","47       4.201670           5  ... -0.095464       4.106206\n","48       4.106206           4  ...  0.079919       4.186125\n","49       4.186125           3  ...  0.000000       4.186125\n","\n","[50 rows x 9 columns]"]},"metadata":{"tags":[]},"execution_count":163}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"to2SmvL9vuUl","executionInfo":{"status":"ok","timestamp":1626562960957,"user_tz":-330,"elapsed":58,"user":{"displayName":"samar singh","photoUrl":"","userId":"11950474101131546920"}},"outputId":"52180aa5-da7a-4568-ee0c-d26924a7abf7"},"source":["print(\"Final Level:\",output_df['Updated Level'][99])"],"execution_count":164,"outputs":[{"output_type":"stream","text":["Final Level: 3.811582944146744\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"NsajIyF1A5ng","executionInfo":{"status":"ok","timestamp":1626562960959,"user_tz":-330,"elapsed":54,"user":{"displayName":"samar singh","photoUrl":"","userId":"11950474101131546920"}},"outputId":"587f9321-8723-4caa-a157-859cbc0ef2a1"},"source":["plt.plot( output_dict['Updated Level'])\n","#plt.xlabel(\"Ques Level\")\n","plt.ylabel(\"Updated Level\")"],"execution_count":165,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Updated Level')"]},"metadata":{"tags":[]},"execution_count":165},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"dttT0A0QBCwj","executionInfo":{"status":"ok","timestamp":1626562960962,"user_tz":-330,"elapsed":49,"user":{"displayName":"samar singh","photoUrl":"","userId":"11950474101131546920"}}},"source":[""],"execution_count":165,"outputs":[]}]}